{"ast":null,"code":"var _jsxFileName = \"/home/jeremiahwarinner/Documents/jeremiahwarinner.github.io/personal website v2/my-profile-app/src/components/PostPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { ChevronLeft } from 'lucide-react';\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  const [post, setPost] = useState(null);\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/get_post/${id}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch post');\n        }\n        const data = await response.json();\n        setPost(data);\n      } catch (error) {\n        console.error('Error fetching post:', error);\n        // Handle error (e.g., show error message or redirect)\n      }\n    };\n    fetchPost();\n  }, [id]);\n  const handleBackClick = () => {\n    // Navigate back to the main page with the blog modal open\n    navigate('/', {\n      state: {\n        openBlogModal: true\n      }\n    });\n  };\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-white z-50 overflow-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBackClick,\n        className: \"mb-4 flex items-center text-gray-600 hover:text-gray-800\",\n        children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Back to Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-4\",\n        children: post.postName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        className: \"prose prose-lg\",\n        children: post.postContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(PostPage, \"nA7SSMiM/DNjdihMKjgm+FyD81c=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","ChevronLeft","ReactMarkdown","jsxDEV","_jsxDEV","PostPage","_s","post","setPost","id","navigate","fetchPost","response","fetch","ok","Error","data","json","error","console","handleBackClick","state","openBlogModal","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","size","postName","postContent","_c","$RefreshReg$"],"sources":["/home/jeremiahwarinner/Documents/jeremiahwarinner.github.io/personal website v2/my-profile-app/src/components/PostPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { ChevronLeft } from 'lucide-react';\nimport ReactMarkdown from 'react-markdown';\n\nconst PostPage = () => {\n  const [post, setPost] = useState(null);\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/get_post/${id}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch post');\n        }\n        const data = await response.json();\n        setPost(data);\n      } catch (error) {\n        console.error('Error fetching post:', error);\n        // Handle error (e.g., show error message or redirect)\n      }\n    };\n\n    fetchPost();\n  }, [id]);\n\n  const handleBackClick = () => {\n    // Navigate back to the main page with the blog modal open\n    navigate('/', { state: { openBlogModal: true } });\n  };\n\n  if (!post) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-white z-50 overflow-auto\">\n      <div className=\"max-w-3xl mx-auto p-4\">\n        <button \n          onClick={handleBackClick}\n          className=\"mb-4 flex items-center text-gray-600 hover:text-gray-800\"\n        >\n          <ChevronLeft size={20} />\n          <span>Back to Posts</span>\n        </button>\n        <h1 className=\"text-3xl font-bold mb-4\">{post.postName}</h1>\n        <ReactMarkdown className=\"prose prose-lg\">\n          {post.postContent}\n        </ReactMarkdown>\n      </div>\n    </div>\n  );\n};\n\nexport default PostPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}